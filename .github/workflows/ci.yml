name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

# Declare environment variables
env:
  GO_VERSION: '1.21'

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: ${{ env.GO_VERSION }}

      - name: golangci-lint
        uses: golangci/golangci-lint-action@v3
        with:
          version: latest
          args: --timeout=5m

  test:
    name: Test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: ${{ env.GO_VERSION }}
        
      - name: Build
        run: go build -v ./...

      - name: Run Tests
        run: go test -v -race ./...

  benchmark:
    name: Benchmark
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: ${{ env.GO_VERSION }}

      - name: Run benchmarks
        run: cd benchmark && go test -bench=. -benchtime=1000x -benchmem
        
  # This job ensures all other jobs pass before allowing merge
  status-check:
    name: Status Check
    needs: [lint, test, benchmark]
    runs-on: ubuntu-latest
    if: always()
    steps:
      - name: Check status
        run: |
          if [ "${{ needs.lint.result }}" != "success" ] || \
             [ "${{ needs.test.result }}" != "success" ] || \
             [ "${{ needs.benchmark.result }}" != "success" ]; then
            echo "One or more required checks failed"
            exit 1
          fi 